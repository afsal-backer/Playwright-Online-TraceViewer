name: Playwright Tests
"on":
  push:
    branches:
      - main
      - master

permissions:
    id-token: write
    contents: read

jobs:
  test:
    timeout-minutes: 10
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        run: npm ci

      - name: Install Chromium
        run: npx playwright install --with-deps chromium

      - name: Run Playwright tests
        run: npx playwright test
      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 1

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        if: always()
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ vars.AWS_REGION }}

      - name: Upload to S3 bucket
        id: S3
        if: always()
        env:
          REPORT_DIR: playwright-report-${{ github.run_id }}
        run: |
              echo "REPORT_DIR=$REPORT_DIR" >> $GITHUB_ENV
              aws s3 cp playwright-report/. s3://${{ vars.AWS_S3_BUCKET }}/$REPORT_DIR --recursive
  
      - name: Generate Pre-Signed URL for index.html
        if: always()
        run: |
                    index_file="${{ env.REPORT_DIR }}/index.html"
                    presigned_url=$(aws s3 presign "s3://${{ vars.AWS_S3_BUCKET }}/$index_file" --expires-in 300)
                    echo "Pre-Signed URL for index.html: $presigned_url"
                    echo "PRE_SIGNED_URL=$presigned_url" >> $GITHUB_ENV

      - name: Generate HTML with Pre-Signed URL
        if: always()
        run: |
              echo "<html><body><a href='${{ env.PRE_SIGNED_URL }}'>View Report</a></body></html>" > report-link.html
            
      - name: Post Comment with Report Link
        if: always()
        uses: actions/github-script@v5
        with:
              github-token: ${{secrets.G_TOKEN}}
              script: |
                  const pull_request_number = context.payload.pull_request.number;
                  const report_url = '${{ env.PRE_SIGNED_URL }}';
                  const comment = `:sparkles: The report is available [here](${report_url}).`;
                  await github.rest.issues.createComment({
                    owner: context.repo.owner,
                    repo: context.repo.repo,
                    issue_number: pull_request_number,
                    body: comment
                  });
            
            
      - name: Create URL file
        if: always()
        run: |
                    echo "${{ env.SHORTENED_URL }}" > url.txt
            
      - name: Setup Job Summary
        if: always()
        run: |
                    echo "### Playwright Test Report" >> $GITHUB_STEP_SUMMARY
                    echo " ðŸ”— [View Report](${{ env.SHORTENED_URL }})" >> $GITHUB_STEP_SUMMARY
        