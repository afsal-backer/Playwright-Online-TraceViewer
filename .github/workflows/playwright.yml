name: Playwright Tests
"on":
  push:
    branches:
      - main
      - master

permissions:
    id-token: write
    contents: read

jobs:
  test:
    timeout-minutes: 10
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        run: npm ci

      - name: Install Chromium
        run: npx playwright install --with-deps chromium

      - name: Run Playwright tests
        run: npx playwright test
      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 1

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        if: always()
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ vars.AWS_REGION }}

      - name: Upload to S3 bucket
        id: S3
        if: always()
        env:
          REPORT_DIR: playwright-report-${{ github.run_id }}
        run: |
              echo "REPORT_DIR=$REPORT_DIR" >> $GITHUB_ENV
              aws s3 cp playwright-report/. s3://${{ vars.AWS_S3_BUCKET }}/$REPORT_DIR --recursive
  
      - name: Generate Pre-Signed URL for index.html
        if: always()
        run: |
                    index_file="${{ env.REPORT_DIR }}/index.html"
                    presigned_url=$(aws s3 presign "s3://${{ vars.AWS_S3_BUCKET }}/$index_file" --expires-in 3600)
                    echo "Pre-Signed URL for index.html: $presigned_url"
                    echo "PRE_SIGNED_URL=$presigned_url" >> $GITHUB_ENV

      - name: Shorten Pre-Signed URL with Bitly
        if: always()
        env:
            BITLY_TOKEN: ${{ secrets.BITLY_TOKEN }}
            LONG_URL: ${{ env.PRE_SIGNED_URL }}
        run: |
            json_body=$(jq -n --arg url "$LONG_URL" '{"domain": "bit.ly", "long_url": $url}')
            response=$(curl -X POST 'https://api-ssl.bitly.com/v4/shorten' \
            -H "Authorization: Bearer ${BITLY_TOKEN}" \
            -H 'Content-Type: application/json' \
            -d "$json_body")
            echo "Bitly Response: $response"
            shortened_url=$(echo $response | jq -r .link)
            echo "SHORTENED_URL=$shortened_url" >> $GITHUB_ENV
            
            
      - name: Create URL file
        if: always()
        run: |
                    echo "${{ env.SHORTENED_URL }}" > url.txt
            
      - name: Setup Job Summary
        if: always()
        run: |
                    echo "### Playwright Test Report" >> $GITHUB_STEP_SUMMARY
                    echo " ðŸ”— [View Report](${{ env.SHORTENED_URL }})" >> $GITHUB_STEP_SUMMARY
        